<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget parent="main_window" name="Main Window">
  <Tab tab_name="BasePosition" containers="1">
   <Container>
    <DockSplitter sizes="0.333707;0.332587;0.333707" orientation="-" count="3">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="0.150252" bottom="-0.002970"/>
       <limitY/>
       <curve color="#ff0009" name="/base_pos_kf[0]"/>
       <curve color="#9c0000" name="/base_joint_pos_est[0]"/>
       <curve color="#000000" name="/base_joint_pos[0]"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="0.012580" bottom="-0.077070"/>
       <limitY/>
       <curve color="#057100" name="/base_pos_kf[1]"/>
       <curve color="#00ff00" name="/base_joint_pos_est[1]"/>
       <curve color="#000000" name="/base_joint_pos[1]"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="0.794987" bottom="0.794405"/>
       <limitY/>
       <curve color="#0033ff" name="/base_pos_kf[2]"/>
       <curve color="#0a0b85" name="/base_joint_pos_est[2]"/>
       <curve color="#000000" name="/base_joint_pos[2]"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="BaseVelocity" containers="1">
   <Container>
    <DockSplitter sizes="0.333707;0.332587;0.333707" orientation="-" count="3">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="24.151393" right="44.088101" top="0.206763" bottom="-0.206934"/>
       <limitY/>
       <curve color="#002fff" name="/base_vel_kf[0]"/>
       <curve color="#000000" name="/base_joint_lin_vel[0]"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="24.151393" right="44.088101" top="0.001556" bottom="-0.005642"/>
       <limitY/>
       <curve color="#0026ff" name="/base_vel_kf[1]">
        <transform alias="/base_vel_kf[1][Scale/Offset]" name="Scale/Offset">
         <options value_offset="0" value_scale="-1.0" time_offset="0"/>
        </transform>
       </curve>
       <curve color="#000000" name="/base_joint_lin_vel[1]"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="24.151393" right="44.088101" top="-0.000663" bottom="-0.004240"/>
       <limitY/>
       <curve color="#0019ff" name="/base_vel_kf[2]">
        <transform alias="/base_vel_kf[2][Scale/Offset]" name="Scale/Offset">
         <options value_offset="-0.012" value_scale="-1.0" time_offset="0"/>
        </transform>
       </curve>
       <curve color="#000000" name="/base_joint_lin_vel[2]"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="BaseEuler" containers="1">
   <Container>
    <DockSplitter sizes="0.333707;0.332587;0.333707" orientation="-" count="3">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="1.570797" bottom="1.570794"/>
       <limitY/>
       <curve color="#0017ff" name="/base_euler_kf[0]"/>
       <curve color="#ff0b00" name="/base_joint_euler_est[0]"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="0.000076" bottom="-0.000160"/>
       <limitY/>
       <curve color="#0003ff" name="/base_euler_kf[1]"/>
       <curve color="#ff0015" name="/base_joint_euler_est[1]"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="0.000002" bottom="-0.000008"/>
       <limitY/>
       <curve color="#0800ff" name="/base_euler_kf[2]"/>
       <curve color="#ff001d" name="/base_joint_euler_est[2]"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="IMU_raw" containers="1">
   <Container>
    <DockSplitter sizes="0.334104;0.331792;0.334104" orientation="-" count="3">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="0.002796" bottom="-0.003396"/>
       <limitY/>
       <curve color="#bcbd22" name="/imu_ang_vel_raw[0]"/>
       <curve color="#1ac938" name="/imu_ang_vel_est[0]"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="0.000118" bottom="-0.000131"/>
       <limitY/>
       <curve color="#1f77b4" name="/imu_ang_vel_raw[1]"/>
       <curve color="#ff7f0e" name="/imu_ang_vel_est[1]"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range left="-83.893838" right="-63.950698" top="0.000021" bottom="-0.000113"/>
       <limitY/>
       <curve color="#d62728" name="/imu_ang_vel_raw[2]"/>
       <curve color="#f14cc1" name="/imu_ang_vel_est[2]"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="1"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <default delimiter="0" time_axis=""/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with MutableScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = MutableScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;]]--&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;&#xa;-- Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix.&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

